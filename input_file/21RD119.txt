=========
CGプログラミング レポート問題（第１回）
=========
実施日 2023年4月14日（5限）
=========
学籍番号　21RD119　　　　　　　         氏名  白川航大                         
=========
すべて，CGプログラミング配布資料から出題です．
---
関連ファイル:
dx2h,help1h,help2cpp, win7cpp，
win7_1.cpp, win7_2.cpp, win7_3.cpp, win7_4.cpp
=========
１　Win7_1.cppについての質問です．
=========
1.1.ウィンドウゲームプログラムで最初に呼び出される関数の関数名は何か．
-----------
解答：WinMain関数、プロトタイプは、

int APIENTRY WinMain(HINSTANCE hWnd, HINSTANCE hPrevInstance, LPTSTR lpCmdLine, int nCmdShow);

=========
1.2.	下記の英語略語のプログラムにおける意味を日本語で簡単に答えよ．
=========
	APIENTRY
-----------
解答：アプリケーションインターフェースのエントリポイント
=========
	HINSTANCE
-----------
解答：ウィンドウインスタンスのハンドラ
=========
	LPTSTR
-----------
解答：コマンドライン入力文字列のロングポインタ
=========
	int
-----------
解答：整数型
=========
２　Win7_2.cppについての質問です．
=========
2．1.	Win7_2.cppについて，win7_1.cppから新たに使用可能となった関数の関数名を答えよ．また，その関数が実装されている場所のファイル名を答えよ．
-----------
解答：下記関数が、help2.cppに実装されている

break_point_true(1);
=========
2.2.	Win7_2.cpp の24行目付近のbreak_pint_true関数の実装箇所をすぐ見たい．どのキーを押せばよいか．
-----------
解答：F12キーを押す。戻るときは、ctr+マイナスキーで元の場所に戻る。
=========
2.3.	Win7_2.cppで，break_point_true関数の利用するさいに，どのファイルのどの箇所にブレークポイントをつければよいか．
-----------
解答：help2.cppのbreak_point_true関数の下記の箇所。

bool break_point_true(bool b)
{
	if (b)
		return true;//ここにブレイクポイントをつける
	return false;
}
=========
2.4.  ポインタptrの値が０（NULL）かどうかで，機械が正しくセットアップできたかがわかります．break_pint_true関数でそのことを確認するコードを示せ．
-----------
解答：下記のように、ptr == NULL (ptrがNULLと等しい)ことが確認できる。

	int ptr = NULL;
	break_point_true(ptr == NULL);
=========
2.5.	プログラム作成中に，不等式 x  > 0が満たされているかどうかが知りたくなった．そんなときにbreak_pint_true関数でそのことを確認するコードを示せ．
-----------
解答：下記のように、

	int x = 1;
	break_point_true(x > 0);
=========
2.6.	break_point_trueに0,1,-1,0.5を入れたときどうなりましたか．ただし，問５の設問に正しく対応したうえで，実際に実行した結果，ブレークポイントにひっかった（停止した）かどうかについて，報告してください．
-----------
解答：1と0.5では停止し、0と-1では停止しなかった。
=========
2.7. 2.3の箇所で停止したので，その理由を知るために，break_point_true関数の呼び出し箇所に戻りたい．どうすればよいか．
-----------
解答：shift+F11キー、または、F10キーの連続押し
=========
３　Win7_3.cppについての質問です．
=========
3.1.	WNDCLASSEX　構造体のもつ変数をすべて挙げよ．ヒント．F12で調べます．
-----------
解答：下記の変数がある

    UINT        cbSize;
    /* Win 3.x */
    UINT        style;
    WNDPROC     lpfnWndProc;
    int         cbClsExtra;
    int         cbWndExtra;
    HINSTANCE   hInstance;
    HICON       hIcon;
    HCURSOR     hCursor;
    HBRUSH      hbrBackground;
    LPCWSTR     lpszMenuName;
    LPCWSTR     lpszClassName;
    /* Win 4.0 */
    HICON       hIconSm;
=========
3.2.	WNDCLASSEX　構造体のサイズをバイト数で答えよ．ヒント．ブレイクポイントで動作を止めてから，sizeof値を確認します．
-----------
解答：80バイト
=========
3.3.	hInstanceで指定するウィンドウは，もともとは，どの関数がいつどこからもらってきたものですか．
-----------
解答：WinMain関数が、OSからもらってきた。
=========
3.4.	lpfnWndProcで指定する関数がやるべき処理は何ですか．
-----------
解答：
=========
3.5.	カーソルの種類としてLoadCursorに指定できるものをすべて答えよ． 
-----------
解答：
=========
3.6.	ウィンドウのスタイルとしてstyleに指定できるフラグ名をすべて答えよ． 
-----------
解答：
=========
3.7.	もし，ウィンドウの登録に失敗したときに，このプログラムはどのように動作しますか．また，それはなぜですか．-----------
解答：
=========
４　Win7_4.cppについての質問です．
=========
4.1.	ウィンドウは，登録するだけでは表示されません．それを実行した瞬間にウィンドウが現れる関数名システム関数名を答えてください．
-----------
解答：
=========
4.2.	ウィンドウのサイズは，縦幅および横幅をいくつで指定しましたか．
-----------
解答：
=========
4.３．実際に作成されるウィンドウは，２で指定したものよりも少し大きめになります．なぜですか．
-----------
解答：
=========
4.４．AdjustWindowRect関数は，その少し大きめの値を計算するシステム関数です．その計算結果から，実際，幅と高さは何画素だけおおきくなったのかを，答えよ．
-----------
解答：
=========
4.５．ウィンドウを表示させ続けるには，window_create関数内のどこにブレイクポイントをつければよいか．
-----------
解答：
=========
4.６．ウィンドウスタイルをWS_OVERLAPPEDWINDOWからWS_POPUPWINDOWにかえたときにウィンドはどのようになりましたか．またそれはなぜですか．両者の違いをフラグの違いで答えてください．
-----------
解答：
=========
5　Win7.cppについての質問です．
=========
5.1.	ウィンドウメッセージループであるwhile文は，１秒間に約何回まわりますか．
-----------
解答：
=========
5.2.	PeekMessage と　GetMessage　の違いについて，答えてください．通常は，GetMessageだけを実行すればいいのですが，今回，PeekMessage　を行っていることの理由についても，こたえてください．
-----------
解答：
=========
5.3.	今回，ウィンドウの×ボタンを押すと，ウィンドウが閉じられます．その仕組みについて，今回のプログラムのどの関数がどのような順番で呼び出されて，何の処理をしているのかを，説明してください．
-----------
解答：
=========
5.4.	☓ボタンを押したとき，finishフラグの値はどうなりましたか．また，その値の確認方法について，ブレイクポイントを付けた場所が，どの関数のどの箇所であったのか，答えてください．
-----------
解答：
=========

